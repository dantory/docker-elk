input {
	jdbc {
		# input 설정을 구분하기 위한 고유문자열(필수는 아님)
		############################### TODO: 복사시 수정해야함
		id => "heodak_test"

		# filter나 output에서 해당값으로 source를 구분하여 처리함.
		############################### TODO: 복사시 수정해야함
		#type => "test"

		# JDBC driver 설정
		jdbc_driver_library => "/usr/share/logstash/lib/mysql-connector-java-8.0.22/mysql-connector-java-8.0.22.jar"
	      	jdbc_driver_class => "com.mysql.cj.jdbc.Driver"

		# db 정보 설정
	      	jdbc_connection_string => "jdbc:mysql://49.247.210.227/user_heodak_dev?characterEncoding=UTF-8&serverTimezone=UTC&useUnicode=true"
	      	jdbc_user => "heodak"
	      	jdbc_password => "wkdehdrjs"

		# 스케쥴 
	        # linux crontab 문법을 따름
		schedule => "*/1 * * * *"

		# 데이터 트레킹 설정(중복 데이터 insert 방지)
		# 트레킹에 사용할 컬럼
		############################### TODO: 복사시 수정해야함
      		tracking_column => "lid"

		# false 타임스탬프 사용, true 숫자 사용
      		use_column_value => true

		# 트래킹에 사용할 컬럼의 타입
      		tracking_column_type => "numeric"
		
		# 가장 마지막 수집결과의 id(tracking_column) 값 저장여부 및 저장파일경로
		record_last_run => true
		############################### TODO: 복사시 수정해야함
		last_run_metadata_path => "/usr/share/logstash/last_run_id_test"

		# tracking_column 값 초기화, 같은 로그로 반복 테스트할 때 필수  
		# clean_run => true 

		# SQL 쿼리
		############################### TODO: 복사시 수정해야함
      		statement => "SELECT *, 'log' AS tbl_name  FROM log WHERE lid > :sql_last_value ORDER BY lid ASC LIMIT 1000" 
    	}
	jdbc {
                # input 설정을 구분하기 위한 고유문자열(필수는 아님)
                ############################### TODO: 복사시 수정해야함
                id => "heodak_topseller"

                # filter나 output에서 해당값으로 source를 구분하여 처리함.
                ############################### TODO: 복사시 수정해야함
                #type => "topseller"

                # JDBC driver 설정
                jdbc_driver_library => "/usr/share/logstash/lib/mysql-connector-java-8.0.22/mysql-connector-java-8.0.22.jar"
                jdbc_driver_class => "com.mysql.cj.jdbc.Driver"

                # db 정보 설정
                jdbc_connection_string => "jdbc:mysql://49.247.210.227/user_heodak_dev?characterEncoding=UTF-8&serverTimezone=UTC&useUnicode=true"
                jdbc_user => "heodak"
                jdbc_password => "wkdehdrjs"

                # 스케쥴
                # linux crontab 문법을 따름
                schedule => "*/1 * * * *"

                # 데이터 트레킹 설정(중복 데이터 insert 방지)
                # 트레킹에 사용할 컬럼
                ############################### TODO: 복사시 수정해야함
                tracking_column => "etid"

                # false 타임스탬프 사용, true 숫자 사용
                use_column_value => true

                # 트래킹에 사용할 컬럼의 타입
                tracking_column_type => "numeric"

                # 가장 마지막 수집결과의 id(tracking_column) 값 저장여부 및 저장파일경로
                record_last_run => true
                ############################### TODO: 복사시 수정해야함
                last_run_metadata_path => "/usr/share/logstash/last_run_id_topseller"

                # tracking_column 값 초기화, 같은 로그로 반복 테스트할 때 필수
                # clean_run => true

                # SQL 쿼리
                ############################### TODO: 복사시 수정해야함
                statement => "
			SELECT *, 'topseller' as tbl_name
			FROM sa_excel_topseller_data 
			WHERE etid > :sql_last_value 
			ORDER BY etid ASC 
			LIMIT 1000
		"
        }
	#stdin { codec => plain { charset => "UTF-8"} }
}

## Add your filters / logstash plugins configuration here

output {
	if [tbl_name] == "log" {
		elasticsearch {
			############################### TODO: 복사시 수정해야함
			id => "els_test"

			# elasticsearch 접속 정보
			hosts => "elasticsearch:9200"
			user => "elastic"
			password => "bsbs1234"

			# https://www.elastic.co/kr/blog/introducing-the-elastic-common-schema
			ecs_compatibility => disabled

			#지도 위치를 표시해주는 'geoip.location' 필드 타입이 'geo_point'인 기본 매핑을 사용하기 위해 'logstash'로 시작하는 인덱스명 사용. 
			#'logstash'를 붙이지 않으면 'geoip.location' 필드 타입이 숫자로 바뀌면서 지도 표시가 안 되기 때문에 별도로 매핑을 만들어줘야 함.
			# ex: logstash-logname
			############################### TODO: 복사시 수정해야함
			index => "htest"
				
			#doc_as_upsert => true
		}
	} else if [tbl_name] == "topseller" {
		elasticsearch {
                        ############################### TODO: 복사시 수정해야함
                        id => "els_htop"

                        # elasticsearch 접속 정보
                        hosts => "elasticsearch:9200"
                        user => "elastic"
                        password => "bsbs1234"

                        # https://www.elastic.co/kr/blog/introducing-the-elastic-common-schema
                        ecs_compatibility => disabled

                        #지도 위치를 표시해주는 'geoip.location' 필드 타입이 'geo_point'인 기본 매핑을 사용하기 위해 'logstash'로 시작하는 인덱스명 사용.
                        #'logstash'를 붙이지 않으면 'geoip.location' 필드 타입이 숫자로 바뀌면서 지도 표시가 안 되기 때문에 별도로 매핑을 만들어줘야 함.
                        # ex: logstash-logname
                        ############################### TODO: 복사시 수정해야함
                        index => "htop"

                        #doc_as_upsert => true
                }
	}

	#stdout { codec => rubydebug }	
}
